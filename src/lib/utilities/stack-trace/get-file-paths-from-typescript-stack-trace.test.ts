import { describe, expect, it } from 'vitest';

import { getFilePathsFromTypeScriptStackTrace } from './get-file-paths-from-typescript-stack-trace';
import GoStacktraceQueryJson from '../../../fixtures/stacktrace-query.go-sdk.json';
import JavaStacktraceQueryJson from '../../../fixtures/stacktrace-query.java-sdk.json';
import UnixTSStacktraceQueryJson from '../../../fixtures/stacktrace-query.ts-sdk.json';
import WindowsTSStacktraceQueryJson from '../../../fixtures/stacktrace-query.ts-sdk.windows.json';

describe('getFilePathsFromTypeScriptStackTrace', () => {
  it('should return properly parsed paths as JSON objects for a stacktrace generated by TypeScipt SDK in a UNIX system', () => {
    const stackTraceText: string =
      UnixTSStacktraceQueryJson.queryResult.payloads[0].data;
    const result: { filePath: string; codeLine: number; character: number }[] =
      getFilePathsFromTypeScriptStackTrace(stackTraceText);
    expect(result.length).toEqual(5);
    expect(result[0].filePath).toEqual(
      '/Users/user/Desktop/ts-sdk/example/node_modules/@temporalio/workflow/src/worker-interface.ts',
    );
    expect(result[0].codeLine).toEqual(85);
    expect(result[0].character).toEqual(7);
    expect(result[1].filePath).toEqual(
      '/Users/user/Desktop/ts-sdk/example/src/workflows.ts',
    );
    expect(result[1].codeLine).toEqual(10);
    expect(result[1].character).toEqual(33);
  });
  it('should return properly parsed paths as JSON objects for a stacktrace generated by TypeScipt SDK in a Windows system', () => {
    const stackTraceText: string =
      WindowsTSStacktraceQueryJson.queryResult.payloads[0].data;
    const result: { filePath: string; codeLine: number; character: number }[] =
      getFilePathsFromTypeScriptStackTrace(stackTraceText);
    expect(result.length).toEqual(5);
    expect(result[0].filePath).toEqual(
      'C:\\Users\\user\\SomeFolder\\samples-typescript\\hello-world\\node_modules\\@temporalio\\workflow\\src\\worker-interface.ts',
    );
    expect(result[0].codeLine).toEqual(85);
    expect(result[0].character).toEqual(7);
    expect(result[1].filePath).toEqual(
      'C:\\Users\\user\\SomeFolder\\samples-typescript\\hello-world\\src\\workflows.ts',
    );
    expect(result[1].codeLine).toEqual(11);
    expect(result[1].character).toEqual(33);
  });
  it('should return UNDEFINED for a stacktrace generated by GO SDK', () => {
    const stackTraceText: string =
      GoStacktraceQueryJson.queryResult.payloads[0].data;
    const result = getFilePathsFromTypeScriptStackTrace(stackTraceText);
    expect(result).toBe(undefined);
  });
  it('should return UNDEFINED for a stacktrace generated by Java SDK', () => {
    const stackTraceText: string =
      JavaStacktraceQueryJson.queryResult.payloads[0].data;
    const result = getFilePathsFromTypeScriptStackTrace(stackTraceText);
    expect(result).toBe(undefined);
  });
});
