version: '3.8'

services:
  temporal-ui:
    build:
      context: .
      dockerfile: Dockerfile.simple
    ports:
      - '8088:8088'
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_UI_PORT=8088
      - TEMPORAL_UI_AUTH_ENABLED=true
      - TEMPORAL_UI_AUTH_PROVIDER_URL=http://keycloak:8080/realms/temporal-ui
      - TEMPORAL_UI_AUTH_CLIENT_ID=temporal-ui
      - TEMPORAL_UI_AUTH_CLIENT_SECRET=your-jwt-secret-key-for-temporal-ui
      - TEMPORAL_UI_AUTH_CALLBACK_URL=http://localhost:8088/auth/sso/callback
      - TEMPORAL_UI_AUTH_JWT_SECRET=your-jwt-secret-key-for-temporal-ui
      - TEMPORAL_UI_CORS_ORIGIN_1=http://localhost:8088
      - TEMPORAL_UI_CORS_ORIGIN_2=http://localhost:8080
      - TEMPORAL_UI_CORS_ORIGIN_3=http://keycloak:8080
    depends_on:
      - keycloak
    networks:
      - temporal-network
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:26.4.0
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin@123
      - KC_DB=dev-file
      - KC_HTTP_PORT=8080
    ports:
      - '8080:8080'
    command: ['start-dev']
    networks:
      - temporal-network
    restart: unless-stopped

  # Optional: Temporal Server for testing
  temporal:
    image: temporalio/auto-setup:1.24.0
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    ports:
      - '7233:7233'
    depends_on:
      - postgresql
    networks:
      - temporal-network
    restart: unless-stopped

  postgresql:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=temporal
      - POSTGRES_USER=temporal
      - POSTGRES_PASSWORD=temporal
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - temporal-network
    restart: unless-stopped

networks:
  temporal-network:
    driver: bridge

volumes:
  postgres_data:
