services:
  # PostgreSQL for Temporal (no SSL)
  postgresql:
    container_name: temporal-postgresql
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
      POSTGRES_DB: temporal
    ports:
      - "5432:5432"
    volumes:
      - temporal-postgres:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    # Disable SSL for PostgreSQL
    command: postgres -c ssl=off -c max_connections=200
    networks:
      - temporal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U temporal"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Temporal Server without TLS (for testing)
  temporal:
    container_name: temporal-server
    image: temporalio/auto-setup:1.24.2
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      # Database configuration (PostgreSQL without SSL)
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql

      # Disable SSL for database connection
      - SQL_TLS_ENABLED=false
      - SQL_TLS=false

      # Disable Elasticsearch
      - ENABLE_ES=false

      # Disable TLS for now
      - TEMPORAL_TLS_DISABLED=true
    ports:
      - "7233:7233" # gRPC without TLS
    networks:
      - temporal-network
    # healthcheck:
    #   test: ["CMD", "tctl", "--address", "localhost:7233", "namespace", "list"]
    #   interval: 15s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 60s
    # restart: on-failure

  # Temporal UI (connects to Temporal without TLS)
  temporal-ui:
    container_name: temporal-ui
    image: temporalio/ui:2.31.2
    # depends_on:
    #   temporal:
    #     condition: service_healthy
    environment:
      # Temporal server address
      - TEMPORAL_ADDRESS=temporal:7233

      # CORS
      - TEMPORAL_CORS_ORIGINS=http://localhost:8999
    ports:
      - "8999:8080"
    networks:
      - temporal-network
    restart: on-failure

networks:
  temporal-network:
    driver: bridge

volumes:
  temporal-postgres:
    driver: local
